java.runtime.version=1.8
#
#spring.datasource.url=jdbc:postgresql://ec2-54-228-125-183.eu-west-1.compute.amazonaws.com:5432
#spring.datasource.username=otawozgesjcrtd
#spring.datasource.password=1b06f0c0346c42d91d7c1d6731e63b75c25e3c9a6f810d4b01d765654465ec9b
#
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.jpa.database=d749n7ddr1j2cj
#spring.datasource.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
#
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
#server.port=8082
#

spring.datasource.url=jdbc:mysql://localhost:3306/jwt
spring.datasource.username=den123
#spring.datasource.username=elteio24m7vrfele
spring.datasource.password=123456
##App Properties
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url = jdbc:mysql://td5l74lo6615qq42.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/xdnmmzylvx8rqpqv?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
#spring.datasource.username = rhwp09pdd5ws7zl3
#spring.datasource.password = lopmvhkp0ezjtj6j


## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
grokonez.app.jwtSecret=jwtGrokonezSecretKey
grokonez.app.jwtExpiration=86400
server.port=8082

spring.datasource.hikari.connection-timeout = 20000 
  #maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.minimum-idle= 10
  #minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.maximum-pool-size= 10
   #maximum pool size
spring.datasource.hikari.idle-timeout=10000
   #maximum idle time for connection
spring.datasource.hikari.max-lifetime= 1000 
#   maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.auto-commit =true
   #default auto-commit behavior.



